name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install
      - run: npm run eslint
      - run: npm run build
      - run: npm test
      - run: npx playwright install --with-deps
      - run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Trigger deployment
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: Discord Notify Success
        uses: rjstone/discord-webhook-notify@v2
        if: ${{ success() }}
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          severity: info
          details: |
            All tests passed - a new version deployed!
            Commit : [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            By : ${{ github.actor }}
            Title: ${{ github.event.head_commit.message || github.event.pull_request.title || 'No title available' }}
      - name: Discord Notify Error
        uses: rjstone/discord-webhook-notify@v2
        if: ${{ failure() }}
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          severity: error
          details: |
            Build failed!
            Commit : [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            By : ${{ github.actor }}
            Title: ${{ github.event.head_commit.message || github.event.pull_request.title || 'No title available' }}
  tag_release:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: v
          DEFAULT_BUMP: patch
      - name: Get latest tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - name: Discord Notify Tag Release
        uses: rjstone/discord-webhook-notify@v2
        if: ${{ success() }}
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          severity: info
          details: |
            A new tag released: ${{ steps.get_tag.outputs.tag }}
